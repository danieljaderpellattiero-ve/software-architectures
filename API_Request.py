from google import genai
import os

client = genai.Client(api_key="AIzaSyCv4N3b9yVHIADUf808AhKlUcwguhnABdo")

prompt = """You are an expert AI food analyst. Your task is to meticulously analyze the provided image of food and extract detailed information based on the following criteria. If specific information cannot be confidently determined from the image, please return 'null' for that field. However, for nutritional values (calories, macronutrients, and fats), provide your best _estimation_ based on the visible ingredients and typical nutritional profiles of such dishes and serving sizes. **Crucial Instruction: Be extremely accurate and specific in your food description. Do not invent food items that are not visible in the image. Base your analysis strictly on what is present in the image.** **1. Food Identification and Description:** * **food_description:** Provide a precise and detailed description of all identifiable food items in the image. Include the apparent preparation methods (e.g., grilled, fried, baked, raw), visible sauces or dressings, and any garnishes. Be as specific as possible (e.g., 'grilled chicken breast' instead of 'chicken'). Focus on visible details and avoid assumptions. **2. Estimated Servings:** * **estimated_servings:** Estimate the number of individual servings of the main dish and any significant side dishes present in the image. Provide a numerical value (e.g., '2'). **3. Nutritional Analysis (Estimates based on visual cues and typical values):** * **nutritional_values:** Provide estimated nutritional values for what appears to be a single average serving of the _main dish_ depicted. If multiple distinct dishes are present, focus on the most prominent one. Base your estimations on the visible ingredients and typical nutritional profiles of similar dishes and serving sizes. * **calories:** Estimate the total calories. * **macronutrients:** * **protein:** Estimate the grams of protein. * **carbs:** Estimate the grams of carbohydrates. * **fat:** Estimate the grams of fat, distinguishing where possible between: * **saturated_fat:** Estimate the grams of saturated fat. * **unsaturated_fat:** Estimate the grams of unsaturated fat. * **micronutrients:** (Estimate presence based on visible ingredients - be conservative and only list if reasonably identifiable) * **vitamins:** List potentially present vitamins (e.g., Vitamin A [if orange vegetables are visible], Vitamin C [if citrus or bright vegetables are visible], etc.). * **minerals:** List potentially present minerals (e.g., Iron [if red meat or leafy greens are visible], Calcium [if dairy is visible], etc.). **4. Health Impact Assessment (Based on estimated nutritional profile):** * **health_impact_analysis:** Evaluate the potential impact of a single serving of the _main dish_ on the following health conditions, based on the estimated nutritional content: * **hypertension:** Indicate if the meal appears to be potentially high in sodium (e.g., visible processed foods, heavy seasoning) and thus a concern for hypertension. Provide a brief explanation. * **cholesterol:** Indicate if the meal appears to be potentially high in saturated and/or trans fats (e.g., visible fried foods, fatty meats, creamy sauces) and thus a concern for cholesterol levels. Provide a brief explanation. * **diabetes:** Indicate if the meal appears to be potentially high in refined carbohydrates or sugars (e.g., visible white bread, sugary sauces, desserts) and thus a concern for blood sugar management. Provide a brief explanation. * **other_potential_concerns:** Based on the visible food, identify any other potential health concerns (e.g., high in processed ingredients, potential for high purine content if organ meats are visible, etc.). **5. Allergy and Dietary Concerns:** * **allergy_concerns:** List any common allergens that appear to be present in the food (e.g., Gluten [if bread or pasta is visible], Dairy [if cheese or cream is visible], Nuts, Soy, Eggs, Fish, Shellfish). * **dietary_considerations:** Based on the visible ingredients, note if the meal appears to align with any common dietary restrictions or preferences (e.g., Vegetarian, Vegan [if clearly identifiable as plant-based], potential for Gluten-Free [if no obvious gluten-containing ingredients are present, but state it's an assumption]). **Output Format:** Present your analysis in a JSON format with the following structure: ```json { "food_description": "...", "estimated_servings": "...", "nutritional_values": { "note": "These values are estimations based on visual cues and typical nutritional profiles and may not be exact.", "calories": "null", "protein": "null", "carbs": "null", "fat": "null", "saturated_fat": "null", "unsaturated_fat": "null", "vitamins": [], "minerals": [] }, "health_impact_analysis": { "hypertension": { "concern": "null", "explanation": "null" }, "cholesterol": { "concern": "null", "explanation": "null" }, "diabetes": { "concern": "null", "explanation": "null" }, "other_potential_concerns": [] }, "allergy_concerns": [], "dietary_considerations": [] } ``` **Note:** Ensure that the JSON is well-structured and all fields are filled out as per the analysis. If any field cannot be determined, use 'null' as the value. Be concise but thorough in your analysis, and ensure that the JSON is valid and properly formatted. After this prompt, I will provide the image data in base64 format. Please analyze the image data according to the instructions above."""

def process_image(image_path):
    """Analyzes an image using Gemini API file upload."""
    try:
        myfile = client.files.upload(file=image_path)
        response = client.models.generate_content(
            model="gemini-2.0-flash", contents=[prompt, myfile]
        )
        return response.text
    except Exception as e:
        print(f"Error analyzing image: {e}")
        return f"Error analyzing image: {e}" #Return the error so it can be sent to the client.