services:
  next-app:
    build:
      context: ./next-app
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/myapp
      - NEXT_PUBLIC_API_URL=http://server:5000
      - NODE_ENV=development
      - JWT_SECRET=a1b2c3d4e5f678901234567890abcdef1234567890abcdef1234567890abcdef
      - NEXT_PUBLIC_GEMINI_URL=http://server:8180
    volumes:
      - ./next-app:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      mongodb:
        condition: service_healthy
      server:
        condition: service_started
    networks:
      - app-network
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "8180:8180"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/myapp
      - GEMINI_API_KEY=AIzaSyDQGr8bbdPKCgzmte-G3xDQRYfIlD3WhgM
    volumes:
      - ./server:/app
      - ./server/received_pdfs:/app/received_pdfs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=myapp
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge
